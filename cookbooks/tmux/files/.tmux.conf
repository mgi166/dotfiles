### prefix
unbind C-b
set-option -g prefix C-q

### reload config file
bind C-r source-file ~/.tmux.conf

#---------------------------
# set-window-options(= setw)
#---------------------------

# コマンド名で自動 rename
setw -g automatic-rename on

# window で動作があると、ステータスラインでハイライト
setw -g monitor-activity on


#-------------------
# set-options(= set)
#-------------------

# mouse で選択
#set -g mouse on

# ESCキーを押した後にの遅延を無くす
set -s escape-time 0

# 256 色表示
set -g default-terminal "xterm-256color"

# 最初の pane の index を 1 に
set -g pane-base-index 1

# window の 最初の index を 1 に
set -g base-index 1

# 全てのベルを無視
set -g bell-action none

# window 履歴で保持される行数
set -g history-limit 50000

# display-panes で数字が表示されるインターバル
set -g display-panes-time 5000

# reattach-to-user-namespace
set -g default-command "reattach-to-user-namespace -l zsh"


### ステータスバー
# ステータスバーを表示
set -g status on

# ステータスバーを下に表示
set -g status-position bottom

# ステータスバーに表示する window の表示 format
set -g window-status-format "###I.#P #W "
set -g window-status-current-format "###I.#P #W #[fg=colour39,bg=colour234,nobold]"

# status bar の更新を 4[sec] に
set -g status-interval 4

# 監視中の window で動作があったとき、ステータスラインに通知しない
set -g visual-activity off

# 左揃え
set -g status-justify "left"

## left status
set -g status-left-length 200

## right status
set -g status-right-length 600

#------------
# key-bindings
#------------

bind c new-window -c "#{pane_current_path}"

# リフレッシュ
bind r refresh-client

# pane を一枚にする
bind 1 break-pane

# pane を水平分割
bind 2 split-window -vc "#{pane_current_path}"

# pane を垂直分割
bind 3 split-window -hc "#{pane_current_path}"

# pane の移動(vi like に)
bind -r C-h select-pane -L
bind -r C-j select-pane -D
bind -r C-k select-pane -U
bind -r C-l select-pane -R

# 番号が振られた pane に飛ぶ
bind i display-panes

# pane のリサイズ
bind -r H resize-pane -L 1
bind -r J resize-pane -D 1
bind -r K resize-pane -U 1
bind -r L resize-pane -R 1

# window の移動
bind C-p previous-window
bind C-n next-window
bind C-w choose-window

# pane の終了
bind k kill-pane

# window の終了
# bind K kill-window

# C-y で paste
bind -n C-y paste-buffer

# C-q を二回押すと nest された tmux に command を送る
bind C-q send-prefix

# M-w, C-w で reattach-to-user-namespace
# tmux < 2.4
# bind -t emacs-copy M-w copy-pipe "reattach-to-user-namespace pbcopy"
# bind -t emacs-copy C-w copy-pipe "reattach-to-user-namespace pbcopy"

# tmux >= 2.4
# bind -T copy-mode M-w send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
# bind -T copy-mode C-w send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# tmux >= 2.6
bind -T copy-mode M-w send -X copy-pipe-and-cancel "pbcopy"
bind -T copy-mode C-w send -X copy-pipe-and-cancel "pbcopy"

# powerline
run-shell "powerline-daemon -q"
# FIXME: shell で path を割り出して、動的に読み込む
source ~/.pyenv/versions/3.6.0/lib/python3.6/site-packages/powerline/bindings/tmux/powerline.conf
